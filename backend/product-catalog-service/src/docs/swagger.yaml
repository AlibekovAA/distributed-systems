info:
  contact: {}
paths:
  /order/{user_id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get the user's current order
      tags:
      - Orders
  /order/{user_id}/{product_id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: ID of product
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete an item from the shopping cart
      tags:
      - Orders
  /order/{user_id}/pay:
    post:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Pay for the order
      tags:
      - Orders
  /order/add:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Add an item to the cart
      tags:
      - Orders
  /orders/{user_id}/history:
    get:
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: User's order history
      tags:
      - Orders
  /products:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Delete a product
      tags:
      - Products
    post:
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Create a new product
      tags:
      - Products
  /products/{email}:
    get:
      produces:
      - application/json
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get a list of products
      tags:
      - Products
swagger: "2.0"
