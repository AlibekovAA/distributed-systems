# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

services:
  postgres-test:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    tmpfs:
      - /var/lib/postgresql/data

  auth-service:
    build:
      context: ../backend/auth-service
      dockerfile: Dockerfile
    image: auth-service:latest
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/auth/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      postgres-test:
        condition: service_healthy

  tests:
    build:
      context: ../backend
      dockerfile: auth-service/Dockerfile.test
    image: auth-service-tests:latest
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    volumes:
      - ./test-results:/app/test-results
      - ./allure-results:/app/allure-results
    depends_on:
      auth-service:
        condition: service_healthy
      postgres-test:
        condition: service_healthy

  allure:
    image: frankescobar/allure-docker-service
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 1
      KEEP_HISTORY: 1
    ports:
      - "5051:5051"
    volumes:
      - ./allure-results:/app/allure-results
